/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VelirionToken,
  VelirionTokenInterface,
} from "../../../contracts/core/VelirionToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyPause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyUnpause",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "UnsoldTokensBurned",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "allocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "allocationTracking",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnUnsold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
    ],
    name: "getAllocation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336040518060400160405280600881526020017f56656c6972696f6e0000000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f564c5200000000000000000000000000000000000000000000000000000000008152508160039081620000909190620008b8565b508060049081620000a29190620008b8565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001119190620009e4565b60405180910390fd5b6200012b81620001a360201b60201c565b50620001486725eb0040504fb77560c01b6200026960201b60201c565b6200016467fba601060b932b1c60c01b6200026960201b60201c565b6200018067fdddb75f9f957b6a60c01b6200026960201b60201c565b6200019d336a52b7d2dcc80cd2e40000006200026c60201b60201c565b62000ad6565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620002e15760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401620002d89190620009e4565b60405180910390fd5b620002f560008383620002f960201b60201c565b5050565b62000315672bebec22d0a22d8660c01b6200026960201b60201c565b62000325620003ad60201b60201c565b620003416795a0416e381d029b60c01b6200026960201b60201c565b6200035d671e8d0a4d3afdf82160c01b6200026960201b60201c565b620003796770f4d8a2555f49eb60c01b6200026960201b60201c565b6200039567ea9cecc6466a404b60c01b6200026960201b60201c565b620003a8838383620003f760201b60201c565b505050565b620003bd6200062760201b60201c565b15620003f5576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036200044d57806002600082825462000440919062000a30565b9250508190555062000523565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015620004dc578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401620004d39392919062000a7c565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200056e5780600260008282540392505081905550620005bb565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200061a919062000ab9565b60405180910390a3505050565b6000600560149054906101000a900460ff16905090565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620006c057607f821691505b602082108103620006d657620006d562000678565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620007407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000701565b6200074c868362000701565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000799620007936200078d8462000764565b6200076e565b62000764565b9050919050565b6000819050919050565b620007b58362000778565b620007cd620007c482620007a0565b8484546200070e565b825550505050565b600090565b620007e4620007d5565b620007f1818484620007aa565b505050565b5b8181101562000819576200080d600082620007da565b600181019050620007f7565b5050565b601f82111562000868576200083281620006dc565b6200083d84620006f1565b810160208510156200084d578190505b620008656200085c85620006f1565b830182620007f6565b50505b505050565b600082821c905092915050565b60006200088d600019846008026200086d565b1980831691505092915050565b6000620008a883836200087a565b9150826002028217905092915050565b620008c3826200063e565b67ffffffffffffffff811115620008df57620008de62000649565b5b620008eb8254620006a7565b620008f88282856200081d565b600060209050601f8311600181146200093057600084156200091b578287015190505b6200092785826200089a565b86555062000997565b601f1984166200094086620006dc565b60005b828110156200096a5784890151825560018201915060208501945060208101905062000943565b868310156200098a578489015162000986601f8916826200087a565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620009cc826200099f565b9050919050565b620009de81620009bf565b82525050565b6000602082019050620009fb6000830184620009d3565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600062000a3d8262000764565b915062000a4a8362000764565b925082820190508082111562000a655762000a6462000a01565b5b92915050565b62000a768162000764565b82525050565b600060608201905062000a936000830186620009d3565b62000aa2602083018562000a6b565b62000ab1604083018462000a6b565b949350505050565b600060208201905062000ad0600083018462000a6b565b92915050565b6121ef8062000ae66000396000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063a9059cbb1161007c578063a9059cbb14610358578063ac8154de14610388578063babfa5fc146103a4578063dd62ed3e146103c0578063f2fde38b146103f0578063fca3a9e91461040c5761014d565b806370a08231146102bc578063715018a6146102ec57806379cc6790146102f65780638456cb59146103125780638da5cb5b1461031c57806395d89b411461033a5761014d565b80632ff2e9dc116101155780632ff2e9dc1461021e578063313ce5671461023c5780633f4ba83a1461025a57806342966c681461026457806345f7f249146102805780635c975abb1461029e5761014d565b806302c35e8e1461015257806306fdde0314610182578063095ea7b3146101a057806318160ddd146101d057806323b872dd146101ee575b600080fd5b61016c60048036038101906101679190611a49565b61043c565b6040516101799190611aab565b60405180910390f35b61018a6104a0565b6040516101979190611b45565b60405180910390f35b6101ba60048036038101906101b59190611bf1565b610532565b6040516101c79190611c4c565b60405180910390f35b6101d8610555565b6040516101e59190611aab565b60405180910390f35b61020860048036038101906102039190611c67565b61055f565b6040516102159190611c4c565b60405180910390f35b61022661058e565b6040516102339190611aab565b60405180910390f35b61024461059d565b6040516102519190611cd6565b60405180910390f35b6102626105a6565b005b61027e60048036038101906102799190611cf1565b610687565b005b61028861069b565b6040516102959190611aab565b60405180910390f35b6102a66106a1565b6040516102b39190611c4c565b60405180910390f35b6102d660048036038101906102d19190611d1e565b6106b8565b6040516102e39190611aab565b60405180910390f35b6102f4610700565b005b610310600480360381019061030b9190611bf1565b610714565b005b61031a610734565b005b610324610814565b6040516103319190611d5a565b60405180910390f35b61034261083e565b60405161034f9190611b45565b60405180910390f35b610372600480360381019061036d9190611bf1565b6108d0565b60405161037f9190611c4c565b60405180910390f35b6103a2600480360381019061039d9190611cf1565b6108f3565b005b6103be60048036038101906103b99190611d75565b610b07565b005b6103da60048036038101906103d59190611de4565b610e80565b6040516103e79190611aab565b60405180910390f35b61040a60048036038101906104059190611d1e565b610f07565b005b61042660048036038101906104219190611a49565b610f8d565b6040516104339190611aab565b60405180910390f35b600061045267973a6c64d83fa90e60c01b610fbb565b61046667a2db1521c4ef691260c01b610fbb565b61047a675657016e153cd77760c01b610fbb565b60068260405161048a9190611e60565b9081526020016040518091039020549050919050565b6060600380546104af90611ea6565b80601f01602080910402602001604051908101604052809291908181526020018280546104db90611ea6565b80156105285780601f106104fd57610100808354040283529160200191610528565b820191906000526020600020905b81548152906001019060200180831161050b57829003601f168201915b5050505050905090565b60008061053d610fbe565b905061054a818585610fc6565b600191505092915050565b6000600254905090565b60008061056a610fbe565b9050610577858285610fd8565b61058285858561106d565b60019150509392505050565b6a52b7d2dcc80cd2e400000081565b60006012905090565b6105ba6772a1c4e68afbaa8860c01b610fbb565b6105c2611161565b6105d6673d703dbaf4c1a14660c01b610fbb565b6105ea67f79adf4787b48e3a60c01b610fbb565b6105fe67911a43ab1421bbd560c01b610fbb565b61061267ab1c45b68077b4a160c01b610fbb565b61061a6111e8565b61062e67d2cacd60b7dc394b60c01b610fbb565b6106426709fe2e9d81a1213b60c01b610fbb565b3373ffffffffffffffffffffffffffffffffffffffff167f306ca22c455fe433ebbf0542bbf947ea6a725495f9e1043db2a47e3c5794038560405160405180910390a2565b610698610692610fbe565b8261124b565b50565b60075481565b6000600560149054906101000a900460ff16905090565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b610708611161565b61071260006112cd565b565b61072682610720610fbe565b83610fd8565b610730828261124b565b5050565b61074867121199648adff91860c01b610fbb565b610750611161565b61076366a81b9691f2716f60c01b610fbb565b61077767691bf3b6a9a1cbda60c01b610fbb565b61078b671383f47e91d1c5f860c01b610fbb565b61079f67ec98f68a5d95b1d460c01b610fbb565b6107a7611393565b6107bb6796f23a60bd4f2f3d60c01b610fbb565b6107cf6765a686adb1bd9e2360c01b610fbb565b3373ffffffffffffffffffffffffffffffffffffffff167f7c83004a7e59a8ea03b200186c4dda29a4e144d9844d63dbc1a09acf7dfcd48560405160405180910390a2565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461084d90611ea6565b80601f016020809104026020016040519081016040528092919081815260200182805461087990611ea6565b80156108c65780601f1061089b576101008083540402835291602001916108c6565b820191906000526020600020905b8154815290600101906020018083116108a957829003601f168201915b5050505050905090565b6000806108db610fbe565b90506108e881858561106d565b600191505092915050565b6109076760c88b1634f2955c60c01b610fbb565b61090f611161565b61092367fef5a1b2ccda950560c01b610fbb565b6109376717c7d1a578cdc15560c01b610fbb565b61094b679c9cd4665b3fe1ca60c01b610fbb565b61095f67c1d3a19c21a85caf60c01b610fbb565b61097367a8237341fc778f5760c01b610fbb565b600081116109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad90611f49565b60405180910390fd5b6109ca6770d51ff025c2739c60c01b610fbb565b6109de67b394ac36e115c7d360c01b610fbb565b6109f267116dc87facb3e37a60c01b610fbb565b610a0667bcfc52590110bcac60c01b610fbb565b80610a17610a12610814565b6106b8565b1015610a58576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4f90611fdb565b60405180910390fd5b610a6c675856ab82968f575560c01b610fbb565b610a8067e1ff058adad0e6b860c01b610fbb565b610a9467b425c4536ed612a860c01b610fbb565b610aa5610a9f610814565b8261124b565b610ab967820b0c1d9e1e843860c01b610fbb565b610acd673ba76e61f80c885860c01b610fbb565b7f3316cd92e8029a9d825199ad5d83f540869e52a9d77cf97560178a0b5ebac6fb81604051610afc9190611aab565b60405180910390a150565b610b1b67c68fb2c7cb069b1b60c01b610fbb565b610b23611161565b610b376747da31937e474f5260c01b610fbb565b610b4b672f2962503eb3a54560c01b610fbb565b610b5f679fa0775dc72790e460c01b610fbb565b610b73679d3fb7503487018460c01b610fbb565b610b8767aea569fd7bf66d4160c01b610fbb565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bf6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bed9061206d565b60405180910390fd5b610c0a67e357fb0be80046f160c01b610fbb565b610c1e67a15800cd48af2ed360c01b610fbb565b610c3267611939f016d8eed260c01b610fbb565b610c4667bc45ea8ac92ff36660c01b610fbb565b60008111610c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8090611f49565b60405180910390fd5b610c9d679a818544f31ebaab60c01b610fbb565b610cb1675d329b79991716cc60c01b610fbb565b610cc567c7e0ef0ed5acdf6360c01b610fbb565b610cd967be5bcb5c88aa4f1c60c01b610fbb565b80610cea610ce5610814565b6106b8565b1015610d2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d22906120ff565b60405180910390fd5b610d3f67c7d00c70381d806460c01b610fbb565b610d536715f8d1a143b6663860c01b610fbb565b80600684604051610d649190611e60565b90815260200160405180910390206000828254610d81919061214e565b92505081905550610d9c677733d659a7aaa58860c01b610fbb565b8060076000828254610dae919061214e565b92505081905550610dc9675f7d05ed3a87816660c01b610fbb565b610ddd67e3b9fee8a0f26a4160c01b610fbb565b610def610de8610814565b838361106d565b610e036754cca8fa2b021ad260c01b610fbb565b610e17679241e128f00deafd60c01b610fbb565b8173ffffffffffffffffffffffffffffffffffffffff1683604051610e3c9190611e60565b60405180910390207f67a90ba89fd057563a71faca71b9f50193409d439108e1e12a9eecf5d1fa24fa83604051610e739190611aab565b60405180910390a3505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610f0f611161565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f815760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610f789190611d5a565b60405180910390fd5b610f8a816112cd565b50565b6006818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b50565b600033905090565b610fd383838360016113f6565b505050565b6000610fe48484610e80565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156110675781811015611057578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161104e93929190612182565b60405180910390fd5b611066848484840360006113f6565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036110df5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016110d69190611d5a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036111515760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016111489190611d5a565b60405180910390fd5b61115c8383836115cd565b505050565b611169610fbe565b73ffffffffffffffffffffffffffffffffffffffff16611187610814565b73ffffffffffffffffffffffffffffffffffffffff16146111e6576111aa610fbe565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111dd9190611d5a565b60405180910390fd5b565b6111f0611649565b6000600560146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611234610fbe565b6040516112419190611d5a565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036112bd5760006040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016112b49190611d5a565b60405180910390fd5b6112c9826000836115cd565b5050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61139b611689565b6001600560146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586113df610fbe565b6040516113ec9190611d5a565b60405180910390a1565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036114685760006040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161145f9190611d5a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036114da5760006040517f94280d620000000000000000000000000000000000000000000000000000000081526004016114d19190611d5a565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080156115c7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516115be9190611aab565b60405180910390a35b50505050565b6115e1672bebec22d0a22d8660c01b610fbb565b6115e9611689565b6115fd6795a0416e381d029b60c01b610fbb565b611611671e8d0a4d3afdf82160c01b610fbb565b6116256770f4d8a2555f49eb60c01b610fbb565b61163967ea9cecc6466a404b60c01b610fbb565b6116448383836116ca565b505050565b6116516106a1565b611687576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6116916106a1565b156116c8576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361171c578060026000828254611710919061214e565b925050819055506117ef565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050818110156117a8578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161179f93929190612182565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118385780600260008282540392505081905550611885565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516118e29190611aab565b60405180910390a3505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6119568261190d565b810181811067ffffffffffffffff821117156119755761197461191e565b5b80604052505050565b60006119886118ef565b9050611994828261194d565b919050565b600067ffffffffffffffff8211156119b4576119b361191e565b5b6119bd8261190d565b9050602081019050919050565b82818337600083830152505050565b60006119ec6119e784611999565b61197e565b905082815260208101848484011115611a0857611a07611908565b5b611a138482856119ca565b509392505050565b600082601f830112611a3057611a2f611903565b5b8135611a408482602086016119d9565b91505092915050565b600060208284031215611a5f57611a5e6118f9565b5b600082013567ffffffffffffffff811115611a7d57611a7c6118fe565b5b611a8984828501611a1b565b91505092915050565b6000819050919050565b611aa581611a92565b82525050565b6000602082019050611ac06000830184611a9c565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b00578082015181840152602081019050611ae5565b60008484015250505050565b6000611b1782611ac6565b611b218185611ad1565b9350611b31818560208601611ae2565b611b3a8161190d565b840191505092915050565b60006020820190508181036000830152611b5f8184611b0c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b9282611b67565b9050919050565b611ba281611b87565b8114611bad57600080fd5b50565b600081359050611bbf81611b99565b92915050565b611bce81611a92565b8114611bd957600080fd5b50565b600081359050611beb81611bc5565b92915050565b60008060408385031215611c0857611c076118f9565b5b6000611c1685828601611bb0565b9250506020611c2785828601611bdc565b9150509250929050565b60008115159050919050565b611c4681611c31565b82525050565b6000602082019050611c616000830184611c3d565b92915050565b600080600060608486031215611c8057611c7f6118f9565b5b6000611c8e86828701611bb0565b9350506020611c9f86828701611bb0565b9250506040611cb086828701611bdc565b9150509250925092565b600060ff82169050919050565b611cd081611cba565b82525050565b6000602082019050611ceb6000830184611cc7565b92915050565b600060208284031215611d0757611d066118f9565b5b6000611d1584828501611bdc565b91505092915050565b600060208284031215611d3457611d336118f9565b5b6000611d4284828501611bb0565b91505092915050565b611d5481611b87565b82525050565b6000602082019050611d6f6000830184611d4b565b92915050565b600080600060608486031215611d8e57611d8d6118f9565b5b600084013567ffffffffffffffff811115611dac57611dab6118fe565b5b611db886828701611a1b565b9350506020611dc986828701611bb0565b9250506040611dda86828701611bdc565b9150509250925092565b60008060408385031215611dfb57611dfa6118f9565b5b6000611e0985828601611bb0565b9250506020611e1a85828601611bb0565b9150509250929050565b600081905092915050565b6000611e3a82611ac6565b611e448185611e24565b9350611e54818560208601611ae2565b80840191505092915050565b6000611e6c8284611e2f565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611ebe57607f821691505b602082108103611ed157611ed0611e77565b5b50919050565b7f56656c6972696f6e546f6b656e3a20416d6f756e74206d75737420626520677260008201527f6561746572207468616e207a65726f0000000000000000000000000000000000602082015250565b6000611f33602f83611ad1565b9150611f3e82611ed7565b604082019050919050565b60006020820190508181036000830152611f6281611f26565b9050919050565b7f56656c6972696f6e546f6b656e3a20496e73756666696369656e742062616c6160008201527f6e636520746f206275726e000000000000000000000000000000000000000000602082015250565b6000611fc5602b83611ad1565b9150611fd082611f69565b604082019050919050565b60006020820190508181036000830152611ff481611fb8565b9050919050565b7f56656c6972696f6e546f6b656e3a20496e76616c696420726563697069656e7460008201527f2061646472657373000000000000000000000000000000000000000000000000602082015250565b6000612057602883611ad1565b915061206282611ffb565b604082019050919050565b600060208201905081810360008301526120868161204a565b9050919050565b7f56656c6972696f6e546f6b656e3a20496e73756666696369656e742062616c6160008201527f6e63650000000000000000000000000000000000000000000000000000000000602082015250565b60006120e9602383611ad1565b91506120f48261208d565b604082019050919050565b60006020820190508181036000830152612118816120dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061215982611a92565b915061216483611a92565b925082820190508082111561217c5761217b61211f565b5b92915050565b60006060820190506121976000830186611d4b565b6121a46020830185611a9c565b6121b16040830184611a9c565b94935050505056fea2646970667358221220de76f3e6364bff1051162d3a40a837bca9ab00ef6cdc6855f2e5d5c0e314a08f64736f6c63430008140033";

type VelirionTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VelirionTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VelirionToken__factory extends ContractFactory {
  constructor(...args: VelirionTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VelirionToken> {
    return super.deploy(overrides || {}) as Promise<VelirionToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VelirionToken {
    return super.attach(address) as VelirionToken;
  }
  override connect(signer: Signer): VelirionToken__factory {
    return super.connect(signer) as VelirionToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VelirionTokenInterface {
    return new utils.Interface(_abi) as VelirionTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VelirionToken {
    return new Contract(address, _abi, signerOrProvider) as VelirionToken;
  }
}
