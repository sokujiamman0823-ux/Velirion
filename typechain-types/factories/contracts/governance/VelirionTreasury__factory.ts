/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VelirionTreasury,
  VelirionTreasuryInterface,
} from "../../../contracts/governance/VelirionTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vlrToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_marketingWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_teamWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_liquidityWallet",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AllocationExceedsBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyDAO",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldDAO",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newDAO",
        type: "address",
      },
    ],
    name: "DAOContractUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "purpose",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FundsAllocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FundsWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "walletType",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "oldWallet",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newWallet",
        type: "address",
      },
    ],
    name: "WalletUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "purpose",
        type: "string",
      },
    ],
    name: "allocateFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allocatedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "wallets",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "string[]",
        name: "purposes",
        type: "string[]",
      },
    ],
    name: "batchAllocateFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "daoContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "getAllocatedFunds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTreasuryStats",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "allocated",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "available",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getWallets",
    outputs: [
      {
        internalType: "address",
        name: "marketing",
        type: "address",
      },
      {
        internalType: "address",
        name: "team",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidity",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidityWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketingWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_daoContract",
        type: "address",
      },
    ],
    name: "setDAOContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newWallet",
        type: "address",
      },
    ],
    name: "setLiquidityWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newWallet",
        type: "address",
      },
    ],
    name: "setMarketingWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_newWallet",
        type: "address",
      },
    ],
    name: "setTeamWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "teamWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vlrToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620017153803806200171583398101604081905262000034916200018d565b806001600160a01b0381166200006457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006f8162000120565b50600180556001600160a01b03851615806200009257506001600160a01b038416155b80620000a557506001600160a01b038316155b80620000b857506001600160a01b038216155b15620000d75760405163e6c4247b60e01b815260040160405180910390fd5b506001600160a01b03938416608052600380549385166001600160a01b0319948516179055600480549285169284169290921790915560058054919093169116179055620001fd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200018857600080fd5b919050565b600080600080600060a08688031215620001a657600080fd5b620001b18662000170565b9450620001c16020870162000170565b9350620001d16040870162000170565b9250620001e16060870162000170565b9150620001f16080870162000170565b90509295509295909350565b6080516114d262000243600039600081816103aa0152818161073a01528181610824015281816108b70152818161095301528181610ab40152610c7b01526114d26000f3fe60806040526004361061012e5760003560e01c80638ada7007116100ab578063d36f84851161006f578063d36f848514610358578063d469801614610378578063d96f12b514610398578063db7a4605146103cc578063e63ea4081461040c578063f2fde38b1461042c57600080fd5b80638ada7007146102a85780638da5cb5b146102c85780639b5655dc146102e6578063c8692e3f146102fb578063d10c10961461032b57600080fd5b80634a7ffcbc116100f25780634a7ffcbc146101fb57806359927044146102335780635d098b3814610253578063715018a61461027357806375f0a8741461028857600080fd5b80631525ff7d1461013a578063296f0a0c1461015c5780632f1312541461017c578063425d512a146101c557806345f7f249146101e557600080fd5b3661013557005b600080fd5b34801561014657600080fd5b5061015a610155366004611073565b61044c565b005b34801561016857600080fd5b5061015a610177366004611073565b6104f3565b34801561018857600080fd5b506101b2610197366004611073565b6001600160a01b031660009081526006602052604090205490565b6040519081526020015b60405180910390f35b3480156101d157600080fd5b5061015a6101e0366004611073565b610593565b3480156101f157600080fd5b506101b260075481565b34801561020757600080fd5b5060025461021b906001600160a01b031681565b6040516001600160a01b0390911681526020016101bc565b34801561023f57600080fd5b5060045461021b906001600160a01b031681565b34801561025f57600080fd5b5061015a61026e366004611073565b610614565b34801561027f57600080fd5b5061015a6106b4565b34801561029457600080fd5b5060035461021b906001600160a01b031681565b3480156102b457600080fd5b5061015a6102c336600461114c565b6106c8565b3480156102d457600080fd5b506000546001600160a01b031661021b565b3480156102f257600080fd5b506101b261089f565b34801561030757600080fd5b5061031061092f565b604080519384526020840192909252908201526060016101bc565b34801561033757600080fd5b506101b2610346366004611073565b60066020526000908152604090205481565b34801561036457600080fd5b5061015a6103733660046112b2565b6109cd565b34801561038457600080fd5b5060055461021b906001600160a01b031681565b3480156103a457600080fd5b5061021b7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d857600080fd5b50600354600454600554604080516001600160a01b03948516815292841660208401529216918101919091526060016101bc565b34801561041857600080fd5b5061015a61042736600461138c565b610d60565b34801561043857600080fd5b5061015a610447366004611073565b610eae565b610454610eec565b6001600160a01b03811661047b5760405163e6c4247b60e01b815260040160405180910390fd5b600480546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd8e98bff5ae8522235ef48daecff7488b367200bea03a4e8cb4bc98108c6a492906104e7906020808252600490820152635465616d60e01b604082015260600190565b60405180910390a35050565b6104fb610eec565b6001600160a01b0381166105225760405163e6c4247b60e01b815260040160405180910390fd5b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd8e98bff5ae8522235ef48daecff7488b367200bea03a4e8cb4bc98108c6a492906104e7906020808252600990820152684c697175696469747960b81b604082015260600190565b61059b610eec565b6001600160a01b0381166105c25760405163e6c4247b60e01b815260040160405180910390fd5b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fe2d8d090ec8181d6498d84a6f75ec89c7d13cdcc4309c46ae725b27f7d09230690600090a35050565b61061c610eec565b6001600160a01b0381166106435760405163e6c4247b60e01b815260040160405180910390fd5b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907fd8e98bff5ae8522235ef48daecff7488b367200bea03a4e8cb4bc98108c6a492906104e7906020808252600990820152684d61726b6574696e6760b81b604082015260600190565b6106bc610eec565b6106c66000610f19565b565b6002546001600160a01b031633146106f357604051630999802f60e41b815260040160405180910390fd5b6106fb610f69565b6001600160a01b0383166107225760405163e6c4247b60e01b815260040160405180910390fd5b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610789573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ad91906113c8565b9050808311156107d057604051631e9acf1760e31b815260040160405180910390fd5b6001600160a01b038416600090815260066020526040812080548592906107f89084906113f7565b92505081905550826007600082825461081191906113f7565b9091555061084b90506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168585610f93565b836001600160a01b03167f7b17d2b21d26fd2c5216c25a3de30bf791de2bf06a5ef118eaaf268e708429f984844260405161088893929190611410565b60405180910390a25061089a60018055565b505050565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610906573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092a91906113c8565b905090565b6040516370a0823160e01b8152306004820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561099a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109be91906113c8565b92506007549150829050909192565b6002546001600160a01b031633146109f857604051630999802f60e41b815260040160405180910390fd5b610a00610f69565b81518351148015610a12575080518251145b610a555760405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b60448201526064015b60405180910390fd5b6000805b8351811015610a9b57838181518110610a7457610a7461146d565b602002602001015182610a8791906113f7565b915080610a9381611483565b915050610a59565b506040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2791906113c8565b905080821115610b4a57604051631e9acf1760e31b815260040160405180910390fd5b60005b8551811015610d545760006001600160a01b0316868281518110610b7357610b7361146d565b60200260200101516001600160a01b031603610ba25760405163e6c4247b60e01b815260040160405180910390fd5b848181518110610bb457610bb461146d565b602002602001015160066000888481518110610bd257610bd261146d565b60200260200101516001600160a01b03166001600160a01b031681526020019081526020016000206000828254610c0991906113f7565b92505081905550848181518110610c2257610c2261146d565b602002602001015160076000828254610c3b91906113f7565b92505081905550610cb2868281518110610c5757610c5761146d565b6020026020010151868381518110610c7157610c7161146d565b60200260200101517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610f939092919063ffffffff16565b858181518110610cc457610cc461146d565b60200260200101516001600160a01b03167f7b17d2b21d26fd2c5216c25a3de30bf791de2bf06a5ef118eaaf268e708429f9868381518110610d0857610d0861146d565b6020026020010151868481518110610d2257610d2261146d565b602002602001015142604051610d3a93929190611410565b60405180910390a280610d4c81611483565b915050610b4d565b50505061089a60018055565b610d68610eec565b610d70610f69565b6001600160a01b038216610d975760405163e6c4247b60e01b815260040160405180910390fd5b6001600160a01b038316610e44576000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610df2576040519150601f19603f3d011682016040523d82523d6000602084013e610df7565b606091505b5050905080610e3e5760405162461bcd60e51b8152602060048201526013602482015272115512081d1c985b9cd9995c8819985a5b1959606a1b6044820152606401610a4c565b50610e58565b610e586001600160a01b0384168383610f93565b816001600160a01b0316836001600160a01b03167f9495d03190a79a43e534c9e328ff322f6283261383f5f19c809564f6ad5a57b383604051610e9d91815260200190565b60405180910390a361089a60018055565b610eb6610eec565b6001600160a01b038116610ee057604051631e4fbdf760e01b815260006004820152602401610a4c565b610ee981610f19565b50565b6000546001600160a01b031633146106c65760405163118cdaa760e01b8152336004820152602401610a4c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600260015403610f8c57604051633ee5aeb560e01b815260040160405180910390fd5b6002600155565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b178152825161089a938793909260009283929183919082885af180611003576040513d6000823e3d81fd5b50506000513d9150811561101b578060011415611028565b6001600160a01b0384163b155b1561105157604051635274afe760e01b81526001600160a01b0385166004820152602401610a4c565b50505050565b80356001600160a01b038116811461106e57600080fd5b919050565b60006020828403121561108557600080fd5b61108e82611057565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156110d4576110d4611095565b604052919050565b600082601f8301126110ed57600080fd5b813567ffffffffffffffff81111561110757611107611095565b61111a601f8201601f19166020016110ab565b81815284602083860101111561112f57600080fd5b816020850160208301376000918101602001919091529392505050565b60008060006060848603121561116157600080fd5b61116a84611057565b925060208401359150604084013567ffffffffffffffff81111561118d57600080fd5b611199868287016110dc565b9150509250925092565b600067ffffffffffffffff8211156111bd576111bd611095565b5060051b60200190565b600082601f8301126111d857600080fd5b813560206111ed6111e8836111a3565b6110ab565b82815260059290921b8401810191818101908684111561120c57600080fd5b8286015b848110156112275780358352918301918301611210565b509695505050505050565b600082601f83011261124357600080fd5b813560206112536111e8836111a3565b82815260059290921b8401810191818101908684111561127257600080fd5b8286015b8481101561122757803567ffffffffffffffff8111156112965760008081fd5b6112a48986838b01016110dc565b845250918301918301611276565b6000806000606084860312156112c757600080fd5b833567ffffffffffffffff808211156112df57600080fd5b818601915086601f8301126112f357600080fd5b813560206113036111e8836111a3565b82815260059290921b8401810191818101908a84111561132257600080fd5b948201945b838610156113475761133886611057565b82529482019490820190611327565b9750508701359250508082111561135d57600080fd5b611369878388016111c7565b9350604086013591508082111561137f57600080fd5b5061119986828701611232565b6000806000606084860312156113a157600080fd5b6113aa84611057565b92506113b860208501611057565b9150604084013590509250925092565b6000602082840312156113da57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561140a5761140a6113e1565b92915050565b83815260006020606081840152845180606085015260005b8181101561144457868101830151858201608001528201611428565b506000608082860101526080601f19601f83011685010192505050826040830152949350505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611495576114956113e1565b506001019056fea26469706673582212206e9ae7e87a2201fbc71176a85cfac5402254831a833e6b9c4e9dfb4115d8b5e364736f6c63430008140033";

type VelirionTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VelirionTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VelirionTreasury__factory extends ContractFactory {
  constructor(...args: VelirionTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vlrToken: PromiseOrValue<string>,
    _marketingWallet: PromiseOrValue<string>,
    _teamWallet: PromiseOrValue<string>,
    _liquidityWallet: PromiseOrValue<string>,
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VelirionTreasury> {
    return super.deploy(
      _vlrToken,
      _marketingWallet,
      _teamWallet,
      _liquidityWallet,
      _admin,
      overrides || {}
    ) as Promise<VelirionTreasury>;
  }
  override getDeployTransaction(
    _vlrToken: PromiseOrValue<string>,
    _marketingWallet: PromiseOrValue<string>,
    _teamWallet: PromiseOrValue<string>,
    _liquidityWallet: PromiseOrValue<string>,
    _admin: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vlrToken,
      _marketingWallet,
      _teamWallet,
      _liquidityWallet,
      _admin,
      overrides || {}
    );
  }
  override attach(address: string): VelirionTreasury {
    return super.attach(address) as VelirionTreasury;
  }
  override connect(signer: Signer): VelirionTreasury__factory {
    return super.connect(signer) as VelirionTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VelirionTreasuryInterface {
    return new utils.Interface(_abi) as VelirionTreasuryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VelirionTreasury {
    return new Contract(address, _abi, signerOrProvider) as VelirionTreasury;
  }
}
