/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Counter, CounterInterface } from "../../contracts/Counter";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "by",
        type: "uint256",
      },
    ],
    name: "Increment",
    type: "event",
  },
  {
    inputs: [],
    name: "inc",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "by",
        type: "uint256",
      },
    ],
    name: "incBy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "x",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506104df806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630c55699c14610046578063371303c01461006457806370119d061461006e575b600080fd5b61004e61008a565b60405161005b9190610282565b60405180910390f35b61006c610090565b005b610088600480360381019061008391906102ce565b610131565b005b60005481565b6100a4675739cf3c195f7cc460c01b610266565b6100b867bbbee24e1fab3cdc60c01b610266565b6000808154809291906100ca9061032a565b91905055506100e367ea29a5456545a95760c01b610266565b6100f767572361e4df852c8b60c01b610266565b7f51af157c2eee40f68107a47a49c32fbbeb0a3c9e5cd37aa56e88e6be92368a81600160405161012791906103b7565b60405180910390a1565b61014567c5f9eea3cd2a81e760c01b610266565b61015967dbfb74d68cd7d77860c01b610266565b61016d676ec2fee4d2c81b6e60c01b610266565b6101816720d3f81c9fd08aa760c01b610266565b600081116101c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bb90610455565b60405180910390fd5b6101d8672c46859c75f67f4e60c01b610266565b6101ec6748aaa0c83d96760060c01b610266565b806000808282546101fd9190610475565b92505081905550610218677024c8bdad54821b60c01b610266565b61022c6729ba87b070fdb17a60c01b610266565b7f51af157c2eee40f68107a47a49c32fbbeb0a3c9e5cd37aa56e88e6be92368a818160405161025b9190610282565b60405180910390a150565b50565b6000819050919050565b61027c81610269565b82525050565b60006020820190506102976000830184610273565b92915050565b600080fd5b6102ab81610269565b81146102b657600080fd5b50565b6000813590506102c8816102a2565b92915050565b6000602082840312156102e4576102e361029d565b5b60006102f2848285016102b9565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061033582610269565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610367576103666102fb565b5b600182019050919050565b6000819050919050565b6000819050919050565b60006103a161039c61039784610372565b61037c565b610269565b9050919050565b6103b181610386565b82525050565b60006020820190506103cc60008301846103a8565b92915050565b600082825260208201905092915050565b7f696e6342793a20696e6372656d656e742073686f756c6420626520706f73697460008201527f6976650000000000000000000000000000000000000000000000000000000000602082015250565b600061043f6023836103d2565b915061044a826103e3565b604082019050919050565b6000602082019050818103600083015261046e81610432565b9050919050565b600061048082610269565b915061048b83610269565b92508282019050808211156104a3576104a26102fb565b5b9291505056fea26469706673582212209c6389a3c9773c2d5884b228e3a1ea17a57504768cb8fd98fc759297c2368f0b64736f6c63430008140033";

type CounterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CounterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Counter__factory extends ContractFactory {
  constructor(...args: CounterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Counter> {
    return super.deploy(overrides || {}) as Promise<Counter>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Counter {
    return super.attach(address) as Counter;
  }
  override connect(signer: Signer): Counter__factory {
    return super.connect(signer) as Counter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CounterInterface {
    return new utils.Interface(_abi) as CounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Counter {
    return new Contract(address, _abi, signerOrProvider) as Counter;
  }
}
