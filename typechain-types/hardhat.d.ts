/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1155Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Errors__factory>;
    getContractFactory(
      name: "IERC20Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Errors__factory>;
    getContractFactory(
      name: "IERC721Errors",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Errors__factory>;
    getContractFactory(
      name: "IERC1363",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1363__factory>;
    getContractFactory(
      name: "IERC4906",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4906__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Burnable__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "SafeERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "SafeCast",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SafeCast__factory>;
    getContractFactory(
      name: "Pausable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Pausable__factory>;
    getContractFactory(
      name: "ReentrancyGuard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ReentrancyGuard__factory>;
    getContractFactory(
      name: "Strings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Strings__factory>;
    getContractFactory(
      name: "VelirionReferral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionReferral__factory>;
    getContractFactory(
      name: "VelirionStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionStaking__factory>;
    getContractFactory(
      name: "VelirionToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionToken__factory>;
    getContractFactory(
      name: "Counter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Counter__factory>;
    getContractFactory(
      name: "VelirionDAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionDAO__factory>;
    getContractFactory(
      name: "VelirionTimelock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionTimelock__factory>;
    getContractFactory(
      name: "VelirionTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionTreasury__factory>;
    getContractFactory(
      name: "IVelirionDAO",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVelirionDAO__factory>;
    getContractFactory(
      name: "IVelirionNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVelirionNFT__factory>;
    getContractFactory(
      name: "IVelirionReferral",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVelirionReferral__factory>;
    getContractFactory(
      name: "IVelirionStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVelirionStaking__factory>;
    getContractFactory(
      name: "MockERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockERC20__factory>;
    getContractFactory(
      name: "VelirionGuardianNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionGuardianNFT__factory>;
    getContractFactory(
      name: "VelirionReferralNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionReferralNFT__factory>;
    getContractFactory(
      name: "VelirionPresaleV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VelirionPresaleV2__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1155Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Errors>;
    getContractAt(
      name: "IERC20Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Errors>;
    getContractAt(
      name: "IERC721Errors",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Errors>;
    getContractAt(
      name: "IERC1363",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1363>;
    getContractAt(
      name: "IERC4906",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4906>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Burnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Burnable>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "SafeERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "SafeCast",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SafeCast>;
    getContractAt(
      name: "Pausable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Pausable>;
    getContractAt(
      name: "ReentrancyGuard",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ReentrancyGuard>;
    getContractAt(
      name: "Strings",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Strings>;
    getContractAt(
      name: "VelirionReferral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionReferral>;
    getContractAt(
      name: "VelirionStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionStaking>;
    getContractAt(
      name: "VelirionToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionToken>;
    getContractAt(
      name: "Counter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Counter>;
    getContractAt(
      name: "VelirionDAO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionDAO>;
    getContractAt(
      name: "VelirionTimelock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionTimelock>;
    getContractAt(
      name: "VelirionTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionTreasury>;
    getContractAt(
      name: "IVelirionDAO",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVelirionDAO>;
    getContractAt(
      name: "IVelirionNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVelirionNFT>;
    getContractAt(
      name: "IVelirionReferral",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVelirionReferral>;
    getContractAt(
      name: "IVelirionStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVelirionStaking>;
    getContractAt(
      name: "MockERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockERC20>;
    getContractAt(
      name: "VelirionGuardianNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionGuardianNFT>;
    getContractAt(
      name: "VelirionReferralNFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionReferralNFT>;
    getContractAt(
      name: "VelirionPresaleV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VelirionPresaleV2>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
